{"version":3,"sources":["Login.spec.js"],"names":["LoginActions","describe","chance","createFakeEvent","value","string","target","beforeEach","it","expect","setEmail","toEqual","any","Function","dispatchFunction","mockDispatch","jest","fn","toHaveBeenCalled","fakeEventValue","expectedAction","type","Actions","login","toHaveBeenCalledWith","setPassword","setFirstName","setLastName","setPasswordRepeat","setAddress","setCity","setAddressState","setZipcode","closeModal","openLoginModal","toggleLoginModal","openSignupModal","toggleSignupModal","clear"],"mappings":"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","file":"Login.spec.js","sourcesContent":["import Chance from 'chance';\nimport * as LoginActions from '../../src/actions/Login';\nimport Actions from '../../src/reducers/Actions';\n\ndescribe('Login Actions', () => {\n  let chance;\n\n  const createFakeEvent = (value = chance.string()) => ({\n    target: {\n      value,\n    },\n  });\n\n  beforeEach(() => {\n    chance = Chance();\n  });\n\n  describe('Set Email', () => {\n    it('is a function', () => {\n      expect(LoginActions.setEmail).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setEmail(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setEmail(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setEmail(createFakeEvent(fakeEventValue));\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setEmail,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Set Password', () => {\n    it('is a function', () => {\n      expect(LoginActions.setPassword).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setPassword(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setPassword(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setPassword(createFakeEvent(fakeEventValue));\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setPassword,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Set First Name', () => {\n    it('is a function', () => {\n      expect(LoginActions.setFirstName).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setFirstName(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setFirstName(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setFirstName(createFakeEvent(fakeEventValue));\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setFirstName,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Set Last Name', () => {\n    it('is a function', () => {\n      expect(LoginActions.setLastName).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setLastName(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setLastName(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setLastName(createFakeEvent(fakeEventValue));\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setLastName,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Set Password Repeat', () => {\n    it('is a function', () => {\n      expect(LoginActions.setPasswordRepeat).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setPasswordRepeat(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setPasswordRepeat(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setPasswordRepeat(createFakeEvent(fakeEventValue));\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setPasswordRepeat,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Set Address', () => {\n    it('is a function', () => {\n      expect(LoginActions.setAddress).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setAddress(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setAddress(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setAddress(createFakeEvent(fakeEventValue));\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setAddress,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Set City', () => {\n    it('is a function', () => {\n      expect(LoginActions.setCity).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setCity(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setCity(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setCity(createFakeEvent(fakeEventValue));\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setCity,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Set Address State', () => {\n    it('is a function', () => {\n      expect(LoginActions.setAddressState).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setAddressState(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setAddressState(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setAddressState({ value: fakeEventValue });\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setAddressState,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Set Zipcode', () => {\n    it('is a function', () => {\n      expect(LoginActions.setZipcode).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.setZipcode(createFakeEvent());\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.setZipcode(createFakeEvent());\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches the correct action', () => {\n      const mockDispatch = jest.fn();\n      const fakeEventValue = chance.string();\n      const dispatchFunction = LoginActions.setZipcode(createFakeEvent(fakeEventValue));\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.setZipcode,\n        value: fakeEventValue,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Open Login Modal', () => {\n    it('is a function', () => {\n      expect(LoginActions.closeModal).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.openLoginModal();\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.openLoginModal();\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.openLoginModal();\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.toggleLoginModal,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Open Signup Modal', () => {\n    it('is a function', () => {\n      expect(LoginActions.openSignupModal).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.openSignupModal();\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.openSignupModal();\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.openSignupModal();\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.toggleSignupModal,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n\n  describe('Close Modal', () => {\n    it('is a function', () => {\n      expect(LoginActions.closeModal).toEqual(expect.any(Function));\n    });\n\n    it('returns a dispatch function', () => {\n      const dispatchFunction = LoginActions.closeModal();\n\n      expect(dispatchFunction).toEqual(expect.any(Function));\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.closeModal();\n\n      dispatchFunction(mockDispatch);\n\n      expect(mockDispatch).toHaveBeenCalled();\n    });\n\n    it('dispatches an action', () => {\n      const mockDispatch = jest.fn();\n      const dispatchFunction = LoginActions.closeModal();\n\n      dispatchFunction(mockDispatch);\n\n      const expectedAction = {\n        type: Actions.login.clear,\n      };\n\n      expect(mockDispatch).toHaveBeenCalledWith(expectedAction);\n    });\n  });\n});\n"]}