{"version":3,"sources":["requestOption.spec.js"],"names":["describe","wrapper","renderComponent","beforeEach","it","expect","type","toEqual","Link","props","to","button","childAt","Button","fluid","toBeTruthy","header","Header","image","Image","circular","size"],"mappings":";;AAAA;;;;AACA;;AACA;;AAWA;;AACA;;;;;;AAEAA,SAAS,eAAT,EAA0B,YAAM;AAC5B,QAAIC,gBAAJ;;AAEA,QAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,eAAM,qBAAQ,8BAAC,uBAAD,OAAR,CAAN;AAAA,KAAxB;;AAEAC,eAAW,YAAM;AACbF,kBAAUC,iBAAV;AACH,KAFD;;AAIAE,OAAG,sBAAH,EAA2B,YAAM;AAC7BC,eAAOJ,QAAQK,IAAR,EAAP,EAAuBC,OAAvB,CAA+BC,oBAA/B;AACH,KAFD;;AAIAJ,OAAG,qBAAH,EAA0B,YAAM;AAC5BC,eAAOJ,QAAQQ,KAAR,GAAgBC,EAAvB,EAA2BH,OAA3B,CAAmC,8BAAnC;AACH,KAFD;;AAIAP,aAAS,QAAT,EAAmB,YAAM;AACrB,YAAIW,eAAJ;;AAEAR,mBAAW,YAAM;AACbQ,qBAASV,QAAQW,OAAR,CAAgB,CAAhB,CAAT;AACH,SAFD;;AAIAR,WAAG,aAAH,EAAkB,YAAM;AACpBC,mBAAOM,OAAOL,IAAP,EAAP,EAAsBC,OAAtB,CAA8BM,uBAA9B;AACH,SAFD;;AAIAT,WAAG,6BAAH,EAAkC,YAAM;AACpCC,mBAAOM,OAAOF,KAAP,GAAeK,KAAtB,EAA6BC,UAA7B;AACH,SAFD;;AAIAf,iBAAS,QAAT,EAAmB,YAAM;AACrB,gBAAIgB,eAAJ;;AAEAb,uBAAW,YAAM;AACba,yBAASL,OAAOC,OAAP,CAAe,CAAf,CAAT;AACH,aAFD;;AAIAR,eAAG,aAAH,EAAkB,YAAM;AACpBC,uBAAOW,OAAOV,IAAP,EAAP,EAAsBC,OAAtB,CAA8BU,uBAA9B;AACH,aAFD;;AAIAjB,qBAAS,OAAT,EAAkB,YAAM;AACpB,oBAAIkB,cAAJ;;AAEAf,2BAAW,YAAM;AACbe,4BAAQF,OAAOJ,OAAP,CAAe,CAAf,CAAR;AACH,iBAFD;;AAIAR,mBAAG,YAAH,EAAiB,YAAM;AACnBC,2BAAOa,MAAMZ,IAAN,EAAP,EAAqBC,OAArB,CAA6BY,sBAA7B;AACH,iBAFD;AAGAf,mBAAG,+BAAH,EAAoC,YAAM;AACtCC,2BAAOa,MAAMT,KAAN,GAAcW,QAArB,EAA+BL,UAA/B;AACH,iBAFD;AAGAX,mBAAG,YAAH,EAAiB,YAAM;AACnBC,2BAAOa,MAAMT,KAAN,GAAcY,IAArB,EAA2Bd,OAA3B,CAAmC,SAAnC;AACH,iBAFD;AAGH,aAhBD;AAiBH,SA5BD;AA6BH,KA5CD;AA6CH,CA9DD","file":"requestOption.spec.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Menu\n    , Modal\n    , Grid\n    , Input\n    , Button\n    , Form\n    , Segment\n    , Header\n    , Image\n} from \"semantic-ui-react\";\nimport { shallow } from \"enzyme\";\nimport RequestOptionComponent from \"../../../src/components/helpers/RequestOption\";\n\ndescribe(\"requestOption\", () => {\n    let wrapper;\n\n    const renderComponent = () => shallow(<RequestOptionComponent />);\n\n    beforeEach(() => {\n        wrapper = renderComponent();\n    });\n\n    it(\"is wrapped in a Link\", () => {\n        expect(wrapper.type()).toEqual(Link);\n    });\n\n    it(\"is the correct link\", () => {\n        expect(wrapper.props().to).toEqual(\"/pipeline/requestInformation\");\n    });\n\n    describe(\"button\", () => {\n        let button;\n\n        beforeEach(() => {\n            button = wrapper.childAt(0);\n        });\n\n        it(\"is a button\", () => {\n            expect(button.type()).toEqual(Button);\n        });\n\n        it(\"is styled as a fluid button\", () => {\n            expect(button.props().fluid).toBeTruthy();\n        });\n\n        describe(\"header\", () => {\n            let header;\n\n            beforeEach(() => {\n                header = button.childAt(0);\n            });\n\n            it(\"is a header\", () => {\n                expect(header.type()).toEqual(Header);\n            });\n\n            describe(\"image\", () => {\n                let image;\n\n                beforeEach(() => {\n                    image = header.childAt(0);\n                });\n\n                it(\"is a image\", () => {\n                    expect(image.type()).toEqual(Image);\n                });\n                it(\"is styled as a circular image\", () => {\n                    expect(image.props().circular).toBeTruthy();\n                });\n                it(\"has a size\", () => {\n                    expect(image.props().size).toEqual(\"massive\");\n                });\n            });\n        });\n    });\n});\n"]}