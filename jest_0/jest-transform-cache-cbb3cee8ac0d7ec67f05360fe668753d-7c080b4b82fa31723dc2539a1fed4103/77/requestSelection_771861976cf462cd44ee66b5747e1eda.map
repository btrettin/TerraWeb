{"version":3,"sources":["requestSelection.js"],"names":["requestSelection","setTypeOfRequest","Styles","segment","mower","rake","snowBlower","custom","propTypes","PropTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;AAEO,IAAMA,wEAAmB,SAAnBA,gBAAmB,kCAC9B;AAAA,gCADiCC,gBACjC,QADiCA,gBACjC;AAAA;AAAA;AAAA;AAAC,gFAAD;AAAA,kCAAM,yCAAN;AACE;AAAA,kCAAC,2EAAD,CAAM,GAAN;AAAA;AACE;AAAC,uFAAD;AAAA,sCAAS,OAAOC,gFAAOC,OAAvB;AACE,kEAAC,0EAAD,8BAAqB,YAAY,CAAjC;AADF;AADF,OADF;AAME;AAAA,kCAAC,2EAAD,CAAM,GAAN;AAAA;AACE;AAAC,uFAAD;AAAA,sCAAS,OAAOD,gFAAOC,OAAvB;AACE;AAAC,wFAAD;AAAA,wCAAQ,IAAG,IAAX;AAAA;AAEE;AAAA,wCAAC,6EAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAFF;AADF;AADF,OANF;AAgBE;AAAA,kCAAC,2EAAD,CAAM,GAAN;AAAA;AACE;AAAC,uFAAD;AAAA,sCAAS,OAAOD,gFAAOC,OAAvB;AACE,kEAAC,6EAAD;AACE,sBAAUC,oEADZ;AAEE,mBAAM,aAFR;AAGE,qBAAS,6CAAM;AAAA;AAAA;;AACbH,+BAAiB,aAAjB;AACD;AALH;AADF;AADF,OAhBF;AA2BE;AAAA,kCAAC,2EAAD,CAAM,GAAN;AAAA;AACE;AAAC,uFAAD;AAAA,sCAAS,OAAOC,gFAAOC,OAAvB;AACE,kEAAC,6EAAD;AACE,sBAAUE,mEADZ;AAEE,mBAAM,aAFR;AAGE,qBAAS,6CAAM;AAAA;AAAA;AAAA,sCAAiB,aAAjB;AAA+B;AAHhD;AADF;AADF,OA3BF;AAoCE;AAAA,kCAAC,2EAAD,CAAM,GAAN;AAAA;AACE;AAAC,uFAAD;AAAA,sCAAS,OAAOH,gFAAOC,OAAvB;AACE,kEAAC,6EAAD;AACE,sBAAUG,yEADZ;AAEE,mBAAM,eAFR;AAGE,qBAAS,6CAAM;AAAA;AAAA;AAAA,sCAAiB,eAAjB;AAAiC;AAHlD;AADF;AADF,OApCF;AA6CE;AAAA,kCAAC,2EAAD,CAAM,GAAN;AAAA;AACE;AAAC,uFAAD;AAAA,sCAAS,OAAOJ,gFAAOC,OAAvB;AACE,kEAAC,6EAAD;AACE,sBAAUI,qEADZ;AAEE,mBAAM,gBAFR;AAGE,qBAAS,6CAAM;AAAA;AAAA;AAAA,sCAAiB,gBAAjB;AAAkC;AAHnD;AADF;AADF;AA7CF;AAAA;AAsDO,CAvDF;;;AA0DPP,iBAAiBQ,SAAjB,GAA6B;AAC3BP,oBAAkBQ,yEAAUC,IAAV,CAAeC;AADN,CAA7B;;4CAKeX,gB","file":"requestSelection.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Header, Segment } from 'semantic-ui-react';\nimport RequestOptionComponent from '../../helpers/RequestOption';\nimport BreadcrumbComponent from '../../helpers/breadcrumb';\nimport Styles from '../../../styles/requestSelection';\nimport mower from '../../../images/pipeline/mower.png';\nimport rake from '../../../images/pipeline/rake.png';\nimport snowBlower from '../../../images/pipeline/snowBlower.png';\nimport custom from '../../../images/pipeline/custom.png';\n\nexport const requestSelection = ({ setTypeOfRequest }) => (\n  <Grid container>\n    <Grid.Row>\n      <Segment style={Styles.segment}>\n        <BreadcrumbComponent activeStep={0} />\n      </Segment>\n    </Grid.Row>\n    <Grid.Row>\n      <Segment style={Styles.segment}>\n        <Header as=\"h2\">\n          Choose Your Service\n          <Header.Subheader>\n            Choose a Service for someone to perform\n          </Header.Subheader>\n        </Header>\n      </Segment>\n    </Grid.Row>\n    <Grid.Row>\n      <Segment style={Styles.segment}>\n        <RequestOptionComponent\n          imageURL={mower}\n          title=\"Lawn Mowing\"\n          onClick={() => {\n            setTypeOfRequest('Lawn Mowing');\n          }}\n        />\n      </Segment>\n    </Grid.Row>\n    <Grid.Row>\n      <Segment style={Styles.segment}>\n        <RequestOptionComponent\n          imageURL={rake}\n          title=\"Leaf Raking\"\n          onClick={() => setTypeOfRequest('Leaf Raking')}\n        />\n      </Segment>\n    </Grid.Row>\n    <Grid.Row>\n      <Segment style={Styles.segment}>\n        <RequestOptionComponent\n          imageURL={snowBlower}\n          title=\"Snow Clearing\"\n          onClick={() => setTypeOfRequest('Snow Clearing')}\n        />\n      </Segment>\n    </Grid.Row>\n    <Grid.Row>\n      <Segment style={Styles.segment}>\n        <RequestOptionComponent\n          imageURL={custom}\n          title=\"Custom Request\"\n          onClick={() => setTypeOfRequest('Custom Request')}\n        />\n      </Segment>\n    </Grid.Row>\n  </Grid>\n);\n\nrequestSelection.propTypes = {\n  setTypeOfRequest: PropTypes.func.isRequired,\n};\n\n\nexport default requestSelection;\n"]}