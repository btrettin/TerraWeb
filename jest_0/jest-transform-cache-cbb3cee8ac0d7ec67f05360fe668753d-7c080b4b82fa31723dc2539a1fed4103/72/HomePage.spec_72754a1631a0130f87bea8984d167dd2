8afb69503ce1f9bbb17de3aa00af5f5c
"use strict";

var _enzyme = require("enzyme");

var _semanticUiReact = require("semantic-ui-react");

var _chance = require("chance");

var _chance2 = _interopRequireDefault(_chance);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _HomePage = require("../../../src/components/pages/HomePage");

var _HomePage2 = _interopRequireDefault(_HomePage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe("Home Page", function () {
    var wrapper = void 0,
        chance = void 0;

    var renderComponent = function renderComponent() {
        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        return (0, _enzyme.shallow)(_react2.default.createElement(_HomePage2.default, {
            setEmail: props.setEmail || jest.fn(),
            setPassword: props.setPassword || jest.fn(),
            setFirstName: props.setFirstName || jest.fn(),
            setLastName: props.setLastName || jest.fn(),
            setPasswordRepeat: props.setPasswordRepeat || jest.fn(),
            setAddress: props.setAddress || jest.fn(),
            setCity: props.setCity || jest.fn(),
            setAddressState: props.setAddressState || jest.fn(),
            setZipcode: props.setZipcode || jest.fn(),
            openLoginModal: props.openLoginModal || jest.fn(),
            closeLoginModal: props.closeLoginModal || jest.fn(),
            isLoginModalOpen: props.isLoginModalOpen || chance.bool(),
            openSignupModal: props.openSignupModal || jest.fn(),
            closeSignupModal: props.closeSignupModal || jest.fn(),
            isSignupModalOpen: props.isSignupModalOpen || chance.bool()
        }));
    };

    beforeEach(function () {
        chance = Chance();
        wrapper = renderComponent().childAt(0);
    });

    it("is wrapped in a div", function () {
        expect(wrapper.type()).toEqual("div");
    });

    describe("Navbar", function () {
        var navbar = void 0;

        beforeEach(function () {
            navbar = wrapper.childAt(0);
        });

        it("is a menu", function () {
            expect(navbar.type()).toEqual(_semanticUiReact.Menu);
        });

        it("is styled as a secondary menu", function () {
            expect(navbar.props().secondary).toBeTruthy();
        });

        describe("Login/Signup button container", function () {
            var loginSignupButtonContainer = void 0;

            beforeEach(function () {
                loginSignupButtonContainer = navbar.childAt(0);
            });

            it("is a menu subcomponent", function () {
                expect(loginSignupButtonContainer.type()).toEqual(_semanticUiReact.Menu.Menu);
            });

            it("is positioned correctly", function () {
                expect(loginSignupButtonContainer.props().position).toEqual("right");
            });

            describe("Login Modal", function () {
                var loginModal = void 0;

                beforeEach(function () {
                    loginModal = loginSignupButtonContainer.childAt(0);
                });

                it("is a modal", function () {
                    expect(loginModal.type()).toEqual(_semanticUiReact.Modal);
                });

                it("is a mini modal", function () {
                    expect(loginModal.props().size).toEqual("mini");
                });

                it("closes the model when closed", function () {
                    var mockCloseLoginModal = jest.fn();

                    wrapper = renderComponent({
                        closeLoginModal: mockCloseLoginModal
                    }).childAt(0);
                    navbar = wrapper.childAt(0);
                    loginSignupButtonContainer = navbar.childAt(0);
                    loginModal = loginSignupButtonContainer.childAt(0);

                    var loginModalOnCloseHandler = loginModal.props().onClose;

                    loginModalOnCloseHandler();

                    expect(mockCloseLoginModal).toHaveBeenCalledTimes(1);
                });

                it("displays a close modal button", function () {
                    expect(loginModal.props().closeIcon).toBeTruthy();
                });

                describe("Login Modal trigger", function () {
                    var loginModalTrigger = void 0;

                    beforeEach(function () {
                        loginModalTrigger = (0, _enzyme.shallow)(loginModal.props().trigger);
                    });

                    it("is a menu item", function () {
                        var expectedType = (0, _enzyme.shallow)(_react2.default.createElement(_semanticUiReact.Menu.Item, { onClick: jest.fn() })).type();

                        expect(loginModalTrigger.type()).toEqual(expectedType);
                    });

                    it("opens the modal when clicked", function () {
                        var mockOpenLoginModal = jest.fn();

                        wrapper = renderComponent({
                            openLoginModal: mockOpenLoginModal
                        }).childAt(0);
                        navbar = wrapper.childAt(0);
                        loginSignupButtonContainer = navbar.childAt(0);
                        loginModal = loginSignupButtonContainer.childAt(0);
                        loginModalTrigger = (0, _enzyme.shallow)(loginModal.props().trigger);

                        var loginModalTriggerOnClickHandler = loginModalTrigger.props().onClick;

                        loginModalTriggerOnClickHandler();

                        expect(mockOpenLoginModal).toHaveBeenCalledTimes(1);
                    });

                    it("displays the correct word", function () {
                        var loginModalTriggerText = loginModalTrigger.childAt(0);

                        expect(loginModalTriggerText.text()).toEqual("Login");
                    });
                });

                describe("Login Modal Header", function () {
                    var loginModalHeader = void 0;

                    beforeEach(function () {
                        loginModalHeader = loginModal.childAt(0);
                    });

                    it("is a modal header", function () {
                        expect(loginModalHeader.type()).toEqual(_semanticUiReact.Modal.Header);
                    });

                    it("displays the correct text", function () {
                        var loginModalHeaderText = loginModalHeader.childAt(0);

                        expect(loginModalHeaderText.text()).toEqual("Welcome Back!");
                    });
                });

                describe("Login Modal Description", function () {
                    var loginModalDescription = void 0;

                    beforeEach(function () {
                        loginModalDescription = loginModal.childAt(1);
                    });

                    it("is a modal description", function () {
                        expect(loginModalDescription.type()).toEqual(_semanticUiReact.Modal.Description);
                    });

                    describe("Login Modal Description Grid", function () {
                        var loginModalDescriptionGrid = void 0;

                        beforeEach(function () {
                            loginModalDescriptionGrid = loginModalDescription.childAt(0);
                        });

                        it("is a grid", function () {
                            expect(loginModalDescriptionGrid.type()).toEqual(_semanticUiReact.Grid);
                        });

                        it("contains three rows", function () {
                            var loginModalDescriptionGridRows = loginModalDescriptionGrid.children();

                            loginModalDescriptionGridRows.forEach(function (row) {
                                expect(row.type()).toEqual(_semanticUiReact.Grid.Row);
                            });
                        });

                        it("contains a row for the login button that is centered", function () {
                            var loginButtonRow = loginModalDescriptionGrid.childAt(2);

                            expect(loginButtonRow.props().centered).toBeTruthy();
                        });
                    });
                });
            });
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,