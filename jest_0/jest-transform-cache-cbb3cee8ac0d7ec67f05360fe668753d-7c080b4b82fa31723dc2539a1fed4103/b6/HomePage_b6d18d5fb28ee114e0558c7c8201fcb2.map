{"version":3,"sources":["HomePage.js"],"names":["HomePage","setEmail","setPassword","setFirstName","setLastName","setPasswordRepeat","setAddress","setCity","setAddressState","setZipcode","openLoginModal","closeLoginModal","isLoginModalOpen","openSignupModal","closeSignupModal","isSignupModalOpen","Styles","navbarContainer","loginSignupMenu","modal","menuItem","modalHeader","loginGrid","modalButton","signUpForm","statekeys","signUpCheckbox","header","pipelineButton","propTypes","PropTypes","func","isRequired","bool","defaultProps"],"mappings":"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","file":"HomePage.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Menu, Modal, Input, Grid, Button, Form } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport Styles from '../../styles/HomePage';\nimport { statekeys } from '../../helpers/Common';\n\nconst HomePage = ({\n  setEmail,\n  setPassword,\n  setFirstName,\n  setLastName,\n  setPasswordRepeat,\n  setAddress,\n  setCity,\n  setAddressState,\n  setZipcode,\n  openLoginModal,\n  closeLoginModal,\n  isLoginModalOpen,\n  openSignupModal,\n  closeSignupModal,\n  isSignupModalOpen,\n}) => (\n  <div>\n    <div style={Styles.navbarContainer}>\n      <Menu secondary style={Styles.loginSignupMenu}>\n        <Menu.Menu position=\"right\">\n          <Modal\n            style={Styles.modal}\n            size=\"mini\"\n            trigger={\n              <Menu.Item style={Styles.menuItem} onClick={openLoginModal}>\n                Login\n              </Menu.Item>\n            }\n            open={isLoginModalOpen}\n            onClose={closeLoginModal}\n            closeIcon\n          >\n            <Modal.Header style={Styles.modalHeader}>\n              Welcome Back!\n            </Modal.Header>\n            <Modal.Description>\n              <Grid style={Styles.loginGrid}>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Input\n                      fluid\n                      icon=\"user\"\n                      iconPosition=\"left\"\n                      placeholder=\"someone@example.com\"\n                      onChange={setEmail}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column>\n                    <Input\n                      fluid\n                      icon=\"lock\"\n                      type=\"password\"\n                      iconPosition=\"left\"\n                      placeholder=\"Password\"\n                      onChange={setPassword}\n                    />\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row centered>\n                  <Grid.Column width={6}>\n                    <Button\n                      style={Styles.modalButton}\n                      size=\"large\"\n                      onClick={closeLoginModal}\n                    >\n                      Login\n                    </Button>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Modal.Description>\n          </Modal>\n          <Modal\n            style={Styles.modal}\n            size=\"tiny\"\n            trigger={\n              <Menu.Item style={Styles.menuItem} onClick={openSignupModal}>\n                Sign Up\n              </Menu.Item>\n            }\n            open={isSignupModalOpen}\n            onClose={closeSignupModal}\n            closeIcon\n          >\n            <Modal.Header style={Styles.modalHeader}>Sign Up!</Modal.Header>\n            <Modal.Description>\n              <Form style={Styles.signUpForm}>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"First Name\"\n                    color=\"white\"\n                    placeholder=\"First Name\"\n                    onChange={setFirstName}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    onChange={setLastName}\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"Email\"\n                    placeholder=\"someone@example.com\"\n                    onChange={setEmail}\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"Password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onChange={setPassword}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"Repeat Password\"\n                    type=\"password\"\n                    placeholder=\"Repeat Password\"\n                    onChange={setPasswordRepeat}\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    fluid\n                    label=\"Address\"\n                    placeholder=\"Address\"\n                    onChange={setAddress}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"City\"\n                    placeholder=\"City\"\n                    onChange={setCity}\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Dropdown\n                    fluid\n                    label=\"State\"\n                    placeholder=\"State\"\n                    search\n                    selection\n                    options={statekeys}\n                    onChange={setAddressState}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"Zipcode\"\n                    placeholder=\"Zipcode\"\n                    onChange={setZipcode}\n                  />\n                </Form.Group>\n                <Form.Group style={Styles.signUpCheckbox}>\n                  <Form.Checkbox label=\"I agree to the Terms and Conditions\" />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Button\n                    style={Styles.modalButton}\n                    size=\"large\"\n                    onClick={closeSignupModal}\n                  >\n                    Submit\n                  </Form.Button>\n                </Form.Group>\n              </Form>\n            </Modal.Description>\n          </Modal>\n        </Menu.Menu>\n      </Menu>\n    </div>\n    <Grid style={Styles.header} centered padded relaxed>\n      <Grid.Row />\n      <Grid.Row>\n        <Link to=\"/pipeline\">\n          <Button style={Styles.pipelineButton} size=\"large\">\n            Make a Request\n          </Button>\n        </Link>\n      </Grid.Row>\n      <Grid.Row />\n    </Grid>\n  </div>\n);\n\nHomePage.propTypes = {\n  setEmail: PropTypes.func.isRequired,\n  setPassword: PropTypes.func.isRequired,\n  setFirstName: PropTypes.func.isRequired,\n  setLastName: PropTypes.func.isRequired,\n  setPasswordRepeat: PropTypes.func.isRequired,\n  setAddress: PropTypes.func.isRequired,\n  setCity: PropTypes.func.isRequired,\n  setAddressState: PropTypes.func.isRequired,\n  setZipcode: PropTypes.func.isRequired,\n  openLoginModal: PropTypes.func.isRequired,\n  closeLoginModal: PropTypes.func.isRequired,\n  isSignupModalOpen: PropTypes.bool.isRequired,\n  isLoginModalOpen: PropTypes.bool.isRequired,\n  openSignupModal: PropTypes.func.isRequired,\n  closeSignupModal: PropTypes.func.isRequired\n};\n\nHomePage.defaultProps = {};\n\nexport default HomePage;\n"]}