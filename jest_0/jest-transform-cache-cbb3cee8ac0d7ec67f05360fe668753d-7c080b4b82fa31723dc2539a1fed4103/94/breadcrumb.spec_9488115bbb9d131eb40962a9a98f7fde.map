{"version":3,"sources":["breadcrumb.spec.js"],"names":["describe","wrapper","renderComponent","beforeEach","it","expect","type","toEqual","Grid","props","container","toBeTruthy","StepperRow","childAt","Row","stepper","Stepper","steps","title","completeColor","activeColor"],"mappings":";;AAAA;;;;AACA;;AAUA;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,SAAS,oBAAT,EAA+B,YAAM;AACjC,QAAIC,gBAAJ;;AAEA,QAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,eAAM,qBAAQ,8BAAC,oBAAD,OAAR,CAAN;AAAA,KAAxB;;AAEAC,eAAW,YAAM;AACbF,kBAAUC,iBAAV;AACH,KAFD;;AAIAE,OAAG,gCAAH,EAAqC,YAAM;AACvCC,eAAOJ,QAAQK,IAAR,EAAP,EAAuBC,OAAvB,CAA+BC,qBAA/B;AACH,KAFD;;AAIAJ,OAAG,+BAAH,EAAoC,YAAM;AACtCC,eAAOJ,QAAQQ,KAAR,GAAgBC,SAAvB,EAAkCC,UAAlC;AACH,KAFD;;AAIAX,aAAS,aAAT,EAAwB,YAAM;AAC1B,YAAIY,mBAAJ;;AAEAT,mBAAW,YAAM;AACbS,yBAAaX,QAAQY,OAAR,CAAgB,CAAhB,CAAb;AACH,SAFD;;AAIAT,WAAG,kBAAH,EAAuB,YAAM;AACzBC,mBAAOO,WAAWN,IAAX,EAAP,EAA0BC,OAA1B,CAAkCC,sBAAKM,GAAvC;AACH,SAFD;;AAIAd,iBAAS,SAAT,EAAoB,YAAM;AACtB,gBAAIe,gBAAJ;;AAEAZ,uBAAW,YAAM;AACbY,0BAAUH,WAAWC,OAAX,CAAmB,CAAnB,CAAV;AACH,aAFD;;AAIAT,eAAG,cAAH,EAAmB,YAAM;AACrBC,uBAAOU,QAAQT,IAAR,EAAP,EAAuBC,OAAvB,CAA+BS,gCAA/B;AACH,aAFD;;AAIAZ,eAAG,gBAAH,EAAqB,YAAM;AACvBC,uBAAOU,QAAQN,KAAR,GAAgBQ,KAAvB,EAA8BV,OAA9B,CAAsC,CAClC,EAAEW,OAAO,SAAT,EADkC,EAEhC,EAAEA,OAAO,SAAT,EAFgC,EAGhC,EAAEA,OAAO,UAAT,EAHgC,EAIhC,EAAEA,OAAO,QAAT,EAJgC,CAAtC;AAMH,aAPD;;AASAd,eAAG,sBAAH,EAA2B,YAAM;AAC7BC,uBAAOU,QAAQN,KAAR,GAAgBU,aAAvB,EAAsCZ,OAAtC,CAA8C,SAA9C;AACH,aAFD;;AAIAH,eAAG,qBAAH,EAA0B,YAAM;AAC5BC,uBAAOU,QAAQN,KAAR,GAAgBW,WAAvB,EAAoCb,OAApC,CAA4C,SAA5C;AACH,aAFD;AAGH,SA3BD;AA4BH,KAvCD;AAwCH,CAzDD","file":"breadcrumb.spec.js","sourcesContent":["import React from \"react\";\nimport {\n    Menu\n    , Modal\n    , Grid\n    , Input\n    , Button\n    , Form\n    , Segment\n    , Header\n} from \"semantic-ui-react\";\nimport { shallow } from \"enzyme\";\nimport Chance from \"chance\";\nimport BreadcrumbComponent from \"../../../src/components/helpers/breadcrumb\";\nimport Stepper from \"react-stepper-horizontal\";\n\ndescribe(\"RequestInformation\", () => {\n    let wrapper;\n\n    const renderComponent = () => shallow(<BreadcrumbComponent />);\n\n    beforeEach(() => {\n        wrapper = renderComponent();\n    });\n\n    it(\"is wrapped in a Grid Container\", () => {\n        expect(wrapper.type()).toEqual(Grid);\n    });\n\n    it(\"is styled as a container Grid\", () => {\n        expect(wrapper.props().container).toBeTruthy();\n    });\n\n    describe(\"Stepper Row\", () => {\n        let StepperRow;\n\n        beforeEach(() => {\n            StepperRow = wrapper.childAt(0);\n        });\n\n        it(\"is a Stepper Row\", () => {\n            expect(StepperRow.type()).toEqual(Grid.Row);\n        });\n\n        describe(\"stepper\", () => {\n            let stepper;\n\n            beforeEach(() => {\n                stepper = StepperRow.childAt(0);\n            });\n\n            it(\"is a stepper\", () => {\n                expect(stepper.type()).toEqual(Stepper);\n            });\n\n            it(\"is has 4 steps\", () => {\n                expect(stepper.props().steps).toEqual([\n                    { title: \"Request\" }\n                    , { title: \"Details\" }\n                    , { title: \"Location\" }\n                    , { title: \"Review\" }\n                ]);\n            });\n\n            it(\"has a complete color\", () => {\n                expect(stepper.props().completeColor).toEqual(\"#63BA18\");\n            });\n\n            it(\"has an active color\", () => {\n                expect(stepper.props().activeColor).toEqual(\"#ffdd43\");\n            });\n        });\n    });\n});\n"]}