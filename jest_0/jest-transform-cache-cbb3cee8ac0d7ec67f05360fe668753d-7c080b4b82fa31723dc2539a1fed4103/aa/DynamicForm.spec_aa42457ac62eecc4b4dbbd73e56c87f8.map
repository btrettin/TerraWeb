{"version":3,"sources":["DynamicForm.spec.js"],"names":["describe","wrapper","renderComponent","beforeEach","it","expect","type","toEqual","Segment","props","padded","toBeTruthy","header","childAt","Header","size","form","Form","submitSegment","button","Button"],"mappings":";;AAAA;;;;AACA;;AACA;;AAWA;;AACA;;;;;;AAEAA,SAAS,aAAT,EAAwB,YAAM;AAC1B,QAAIC,gBAAJ;AACA,QAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,eAAM,qBAAQ,8BAAC,qBAAD,IAAsB,aAAY,aAAlC,GAAR,CAAN;AAAA,KAAxB;;AAEAC,eAAW,YAAM;AACbF,kBAAUC,iBAAV;AACH,KAFD;;AAIAE,OAAG,yBAAH,EAA8B,YAAM;AAChCC,eAAOJ,QAAQK,IAAR,EAAP,EAAuBC,OAAvB,CAA+BC,wBAA/B;AACH,KAFD;;AAIAJ,OAAG,+BAAH,EAAoC,YAAM;AACtCC,eAAOJ,QAAQQ,KAAR,GAAgBC,MAAvB,EAA+BC,UAA/B;AACH,KAFD;;AAIAX,aAAS,QAAT,EAAmB,YAAM;AACrB,YAAIY,eAAJ;;AAEAT,mBAAW,YAAM;AACbS,qBAASX,QAAQY,OAAR,CAAgB,CAAhB,CAAT;AACH,SAFD;;AAIAT,WAAG,aAAH,EAAkB,YAAM;AACpBC,mBAAOO,OAAON,IAAP,EAAP,EAAsBC,OAAtB,CAA8BO,uBAA9B;AACH,SAFD;AAGAV,WAAG,eAAH,EAAoB,YAAM;AACtBC,mBAAOO,OAAOH,KAAP,GAAeM,IAAtB,EAA4BR,OAA5B,CAAoC,OAApC;AACH,SAFD;AAGH,KAbD;;AAeAP,aAAS,MAAT,EAAiB,YAAM;AACnB,YAAIgB,aAAJ;;AAEAb,mBAAW,YAAM;AACba,mBAAOf,QAAQY,OAAR,CAAgB,CAAhB,CAAP;AACH,SAFD;;AAIAT,WAAG,WAAH,EAAgB,YAAM;AAClBC,mBAAOW,KAAKV,IAAL,EAAP,EAAoBC,OAApB,CAA4BU,qBAA5B;AACH,SAFD;AAGH,KAVD;;AAYAjB,aAAS,eAAT,EAA0B,YAAM;AAC5B,YAAIkB,sBAAJ;;AAEAf,mBAAW,YAAM;AACbe,4BAAgBjB,QAAQY,OAAR,CAAgB,CAAhB,EAAmBA,OAAnB,CAA2B,CAA3B,CAAhB;AACH,SAFD;;AAIAT,WAAG,iBAAH,EAAsB,YAAM;AACxBC,mBAAOa,cAAcZ,IAAd,EAAP,EAA6BC,OAA7B,CAAqCC,wBAArC;AACH,SAFD;;AAIAJ,WAAG,kCAAH,EAAuC,YAAM;AACzC,gBAAMe,SAASD,cAAcL,OAAd,CAAsB,CAAtB,CAAf;AACAR,mBAAOc,OAAOb,IAAP,EAAP,EAAsBC,OAAtB,CAA8Ba,uBAA9B;AACH,SAHD;AAIH,KAfD;AAgBH,CA3DD","file":"DynamicForm.spec.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Menu\n    , Modal\n    , Grid\n    , Input\n    , Button\n    , Form\n    , Segment\n    , Header\n    , Image\n} from \"semantic-ui-react\";\nimport { shallow } from \"enzyme\";\nimport DynamicFormComponent from \"../../../src/components/helpers/DynamicForm\";\n\ndescribe(\"DynamicForm\", () => {\n    let wrapper;\n    const renderComponent = () => shallow(<DynamicFormComponent requestType=\"Lawn Mowing\" />);\n\n    beforeEach(() => {\n        wrapper = renderComponent();\n    });\n\n    it(\"is wrapped in a Segment\", () => {\n        expect(wrapper.type()).toEqual(Segment);\n    });\n\n    it(\"is styled as a padded Segment\", () => {\n        expect(wrapper.props().padded).toBeTruthy();\n    });\n\n    describe(\"header\", () => {\n        let header;\n\n        beforeEach(() => {\n            header = wrapper.childAt(0);\n        });\n\n        it(\"is a header\", () => {\n            expect(header.type()).toEqual(Header);\n        });\n        it(\"is has a size\", () => {\n            expect(header.props().size).toEqual(\"large\");\n        });\n    });\n\n    describe(\"form\", () => {\n        let form;\n\n        beforeEach(() => {\n            form = wrapper.childAt(1);\n        });\n\n        it(\"is a form\", () => {\n            expect(form.type()).toEqual(Form);\n        });\n    });\n\n    describe(\"Submit Button\", () => {\n        let submitSegment;\n\n        beforeEach(() => {\n            submitSegment = wrapper.childAt(1).childAt(1);\n        });\n\n        it(\"It is a segment\", () => {\n            expect(submitSegment.type()).toEqual(Segment);\n        });\n\n        it(\"There is a button in the segment\", () => {\n            const button = submitSegment.childAt(0);\n            expect(button.type()).toEqual(Button);\n        });\n    })\n});\n"]}